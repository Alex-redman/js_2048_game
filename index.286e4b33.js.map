{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_type_of.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $0b5c99e6a0876eaa$export$71511d61b312f219(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState || [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"renderBoard\",\n            value: function renderBoard() {\n                var cells = document.querySelectorAll(\".field-cell\");\n                var flattenedBoard = this.board.flat();\n                cells.forEach(function(cell, index) {\n                    var value = flattenedBoard[index];\n                    cell.textContent = value === 0 ? \"\" : value;\n                    if (value > 0) cell.classList.add(\"field-cell--\".concat(value));\n                    else cell.classList = \"field-cell\";\n                });\n            }\n        },\n        {\n            key: \"canMove\",\n            value: function canMove() {\n                for(var row = 0; row < this.board.length; row++)for(var col = 0; col < this.board[row].length; col++){\n                    if (this.board[row][col] === 0) return true;\n                    if (col > 0 && this.board[row][col] === this.board[row][col - 1]) return true;\n                    if (col < this.board[row].length - 1 && this.board[row][col] === this.board[row][col + 1]) return true;\n                    if (row > 0 && this.board[row][col] === this.board[row - 1][col]) return true;\n                    if (row < this.board.length - 1 && this.board[row][col] === this.board[row + 1][col]) return true;\n                }\n                this.lose();\n                return false;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this, _loop = function(row) {\n                    var compacted = _this.board[row].filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = 0; i < compacted.length - 1; i++)if (compacted[i] === compacted[i + 1]) {\n                        compacted[i] *= 2;\n                        _this.score += compacted[i];\n                        compacted[i + 1] = 0;\n                    }\n                    var newRow = compacted.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(newRow.length < 4)newRow.push(0);\n                    _this.board[row] = newRow;\n                    if (newRow.includes(2048)) {\n                        _this.status = \"win\";\n                        _this.displayWinMessage();\n                        return {\n                            v: void void 0\n                        };\n                    }\n                };\n                if (!this.canMove()) return;\n                var copyBoard = this.board.map(function(row) {\n                    return row.slice();\n                });\n                for(var row = 0; row < this.board.length; row++){\n                    var _ret = _loop(row);\n                    if ((0, $0b5c99e6a0876eaa$export$71511d61b312f219)(_ret) === \"object\") return _ret.v;\n                }\n                if (!this.boardsAreEqual(copyBoard, this.board)) this.addRandomTile();\n                this.updateScore();\n                this.renderBoard();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this, _loop = function(row) {\n                    var compacted = _this.board[row].filter(function(cell) {\n                        return cell !== 0;\n                    }).reverse();\n                    for(var i = 0; i < compacted.length - 1; i++)if (compacted[i] === compacted[i + 1]) {\n                        compacted[i] *= 2;\n                        _this.score += compacted[i];\n                        compacted[i + 1] = 0;\n                    }\n                    var newRow = compacted.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(newRow.length < 4)newRow.push(0);\n                    _this.board[row] = newRow.reverse();\n                    if (newRow.includes(2048)) {\n                        _this.status = \"win\";\n                        _this.displayWinMessage();\n                        return {\n                            v: void void 0\n                        };\n                    }\n                };\n                if (!this.canMove()) return;\n                var copyBoard = this.board.map(function(row) {\n                    return row.slice();\n                });\n                for(var row = 0; row < this.board.length; row++){\n                    var _ret = _loop(row);\n                    if ((0, $0b5c99e6a0876eaa$export$71511d61b312f219)(_ret) === \"object\") return _ret.v;\n                }\n                if (!this.boardsAreEqual(copyBoard, this.board)) this.addRandomTile();\n                this.updateScore();\n                this.renderBoard();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(col) {\n                    var column = [];\n                    for(var row = 0; row < _this.board.length; row++)column.push(_this.board[row][col]);\n                    var compacted = column.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = 0; i < compacted.length - 1; i++)if (compacted[i] === compacted[i + 1]) {\n                        compacted[i] *= 2;\n                        _this.score += compacted[i];\n                        compacted[i + 1] = 0;\n                    }\n                    var newColumn = compacted.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(newColumn.length < 4)newColumn.push(0);\n                    for(var row1 = 0; row1 < _this.board.length; row1++)_this.board[row1][col] = newColumn[row1];\n                    if (newColumn.includes(2048)) {\n                        _this.status = \"win\";\n                        _this.displayWinMessage();\n                        return {\n                            v: void void 0\n                        };\n                    }\n                };\n                if (!this.canMove()) return;\n                var copyBoard = this.board.map(function(row) {\n                    return row.slice();\n                });\n                for(var col = 0; col < this.board[0].length; col++){\n                    var _ret = _loop(col);\n                    if ((0, $0b5c99e6a0876eaa$export$71511d61b312f219)(_ret) === \"object\") return _ret.v;\n                }\n                if (!this.boardsAreEqual(copyBoard, this.board)) this.addRandomTile();\n                this.updateScore();\n                this.renderBoard();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this, _loop = function(col) {\n                    var column = [];\n                    for(var row = 0; row < _this.board.length; row++)column.push(_this.board[row][col]);\n                    column.reverse();\n                    var compacted = column.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = 0; i < compacted.length - 1; i++)if (compacted[i] === compacted[i + 1]) {\n                        compacted[i] *= 2;\n                        _this.score += compacted[i];\n                        compacted[i + 1] = 0;\n                    }\n                    var newColumn = compacted.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(newColumn.length < 4)newColumn.push(0);\n                    newColumn.reverse();\n                    for(var row1 = 0; row1 < _this.board.length; row1++)_this.board[row1][col] = newColumn[row1];\n                    if (newColumn.includes(2048)) {\n                        _this.status = \"win\";\n                        _this.displayWinMessage();\n                        return {\n                            v: void void 0\n                        };\n                    }\n                };\n                if (!this.canMove()) return;\n                var copyBoard = this.board.map(function(row) {\n                    return row.slice();\n                });\n                for(var col = 0; col < this.board[0].length; col++){\n                    var _ret = _loop(col);\n                    if ((0, $0b5c99e6a0876eaa$export$71511d61b312f219)(_ret) === \"object\") return _ret.v;\n                }\n                if (!this.boardsAreEqual(copyBoard, this.board)) this.addRandomTile();\n                this.updateScore();\n                this.renderBoard();\n            }\n        },\n        {\n            key: \"boardsAreEqual\",\n            value: function boardsAreEqual(board1, board2) {\n                if (board1.length !== board2.length) return false;\n                for(var row = 0; row < board1.length; row++)for(var col = 0; col < board1[row].length; col++){\n                    if (board1[row][col] !== board2[row][col]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"updateScore\",\n            value: function updateScore() {\n                var scoreElement = document.querySelector(\".game-score\");\n                scoreElement.textContent = this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return {\n                    board: this.board,\n                    score: this.score,\n                    status: this.status\n                };\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.addRandomTile();\n                this.addRandomTile();\n                this.updateScore();\n                this.renderBoard();\n            }\n        },\n        {\n            key: \"resetBoard\",\n            value: function resetBoard() {\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCell = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.board[row][col] === 0) emptyCell.push({\n                        row: row,\n                        col: col\n                    });\n                }\n                if (emptyCell.length > 0) {\n                    var randomIndex = Math.floor(Math.random() * emptyCell.length);\n                    var _emptyCell_randomIndex = emptyCell[randomIndex], row1 = _emptyCell_randomIndex.row, col1 = _emptyCell_randomIndex.col;\n                    var newTile = Math.random() < 0.9 ? 2 : 4;\n                    this.board[row1][col1] = newTile;\n                    this.score += newTile;\n                }\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.status = \"idle\";\n                this.resetBoard();\n                this.score = 0;\n                this.updateScore();\n                this.renderBoard();\n            }\n        },\n        {\n            key: \"lose\",\n            value: function lose() {\n                this.status = \"lose\";\n                document.querySelector(\".message-restart\").classList.add(\"hidden\");\n                document.querySelector(\".message-start\").classList.add(\"hidden\");\n                document.querySelector(\".message-lose\").classList.remove(\"hidden\");\n            }\n        },\n        {\n            key: \"displayWinMessage\",\n            value: function displayWinMessage() {\n                var winMessage = document.querySelector(\".message-win\");\n                document.querySelector(\".message-restart\").classList.add(\"hidden\");\n                document.querySelector(\".message-start\").classList.add(\"hidden\");\n                winMessage.classList.remove(\"hidden\");\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\nwindow.Game = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\ndocument.addEventListener(\"keydown\", function(even) {\n    switch(even.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n});\nvar $197cd56b15c33885$var$buttonStart = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageRestart = document.querySelector(\".message-restart\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\n$197cd56b15c33885$var$buttonStart.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$buttonStart.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$buttonStart.textContent = \"Restart\";\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$buttonStart.classList.remove(\"start\");\n        $197cd56b15c33885$var$buttonStart.classList.add(\"restart\");\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageRestart.classList.remove(\"hidden\");\n    } else {\n        $197cd56b15c33885$var$buttonStart.textContent = \"Start\";\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$buttonStart.classList.remove(\"restart\");\n        $197cd56b15c33885$var$buttonStart.classList.add(\"start\");\n        $197cd56b15c33885$var$messageRestart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n    }\n});\n\n})();\n//# sourceMappingURL=index.286e4b33.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\ndocument.addEventListener('keydown', (even) => {\n  switch (even.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n});\n\nconst buttonStart = document.querySelector('.button.start');\nconst messageStart = document.querySelector('.message-start');\nconst messageRestart = document.querySelector('.message-restart');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nbuttonStart.addEventListener('click', () => {\n  if (buttonStart.classList.contains('start')) {\n    buttonStart.textContent = 'Restart';\n    game.start();\n    buttonStart.classList.remove('start');\n    buttonStart.classList.add('restart');\n    messageStart.classList.add('hidden');\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    messageRestart.classList.remove('hidden');\n  } else {\n    buttonStart.textContent = 'Start';\n    game.restart();\n    buttonStart.classList.remove('restart');\n    buttonStart.classList.add('start');\n    messageRestart.classList.add('hidden');\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    messageStart.classList.remove('hidden');\n  }\n});\n","'use strict';\n\nclass Game {\n  constructor(initialState) {\n    this.board = initialState || [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  renderBoard() {\n    const cells = document.querySelectorAll('.field-cell');\n    const flattenedBoard = this.board.flat();\n\n    cells.forEach((cell, index) => {\n      const value = flattenedBoard[index];\n\n      cell.textContent = value === 0 ? '' : value;\n\n      if (value > 0) {\n        cell.classList.add(`field-cell--${value}`);\n      } else {\n        cell.classList = 'field-cell';\n      }\n    });\n  }\n\n  canMove() {\n    for (let row = 0; row < this.board.length; row++) {\n      for (let col = 0; col < this.board[row].length; col++) {\n        if (this.board[row][col] === 0) {\n          return true;\n        }\n\n        if (col > 0 && this.board[row][col] === this.board[row][col - 1]) {\n          return true;\n        }\n\n        if (\n          col < this.board[row].length - 1 &&\n          this.board[row][col] === this.board[row][col + 1]\n        ) {\n          return true;\n        }\n\n        if (row > 0 && this.board[row][col] === this.board[row - 1][col]) {\n          return true;\n        }\n\n        if (\n          row < this.board.length - 1 &&\n          this.board[row][col] === this.board[row + 1][col]\n        ) {\n          return true;\n        }\n      }\n    }\n    this.lose();\n\n    return false;\n  }\n\n  moveLeft() {\n    if (!this.canMove()) {\n      return;\n    }\n\n    const copyBoard = this.board.map((row) => row.slice());\n\n    for (let row = 0; row < this.board.length; row++) {\n      const compacted = this.board[row].filter((cell) => cell !== 0);\n\n      for (let i = 0; i < compacted.length - 1; i++) {\n        if (compacted[i] === compacted[i + 1]) {\n          compacted[i] *= 2;\n          this.score += compacted[i];\n          compacted[i + 1] = 0;\n        }\n      }\n\n      const newRow = compacted.filter((cell) => cell !== 0);\n\n      while (newRow.length < 4) {\n        newRow.push(0);\n      }\n\n      this.board[row] = newRow;\n\n      if (newRow.includes(2048)) {\n        this.status = 'win';\n        this.displayWinMessage();\n\n        return;\n      }\n    }\n\n    if (!this.boardsAreEqual(copyBoard, this.board)) {\n      this.addRandomTile();\n    }\n\n    this.updateScore();\n    this.renderBoard();\n  }\n\n  moveRight() {\n    if (!this.canMove()) {\n      return;\n    }\n\n    const copyBoard = this.board.map((row) => row.slice());\n\n    for (let row = 0; row < this.board.length; row++) {\n      const compacted = this.board[row].filter((cell) => cell !== 0).reverse();\n\n      for (let i = 0; i < compacted.length - 1; i++) {\n        if (compacted[i] === compacted[i + 1]) {\n          compacted[i] *= 2;\n          this.score += compacted[i];\n          compacted[i + 1] = 0;\n        }\n      }\n\n      const newRow = compacted.filter((cell) => cell !== 0);\n\n      while (newRow.length < 4) {\n        newRow.push(0);\n      }\n\n      this.board[row] = newRow.reverse();\n\n      if (newRow.includes(2048)) {\n        this.status = 'win';\n        this.displayWinMessage();\n\n        return;\n      }\n    }\n\n    if (!this.boardsAreEqual(copyBoard, this.board)) {\n      this.addRandomTile();\n    }\n\n    this.updateScore();\n    this.renderBoard();\n  }\n\n  moveUp() {\n    if (!this.canMove()) {\n      return;\n    }\n\n    const copyBoard = this.board.map((row) => row.slice());\n\n    for (let col = 0; col < this.board[0].length; col++) {\n      const column = [];\n\n      for (let row = 0; row < this.board.length; row++) {\n        column.push(this.board[row][col]);\n      }\n\n      const compacted = column.filter((cell) => cell !== 0);\n\n      for (let i = 0; i < compacted.length - 1; i++) {\n        if (compacted[i] === compacted[i + 1]) {\n          compacted[i] *= 2;\n          this.score += compacted[i];\n          compacted[i + 1] = 0;\n        }\n      }\n\n      const newColumn = compacted.filter((cell) => cell !== 0);\n\n      while (newColumn.length < 4) {\n        newColumn.push(0);\n      }\n\n      for (let row = 0; row < this.board.length; row++) {\n        this.board[row][col] = newColumn[row];\n      }\n\n      if (newColumn.includes(2048)) {\n        this.status = 'win';\n        this.displayWinMessage();\n\n        return;\n      }\n    }\n\n    if (!this.boardsAreEqual(copyBoard, this.board)) {\n      this.addRandomTile();\n    }\n\n    this.updateScore();\n    this.renderBoard();\n  }\n\n  moveDown() {\n    if (!this.canMove()) {\n      return;\n    }\n\n    const copyBoard = this.board.map((row) => row.slice());\n\n    for (let col = 0; col < this.board[0].length; col++) {\n      const column = [];\n\n      for (let row = 0; row < this.board.length; row++) {\n        column.push(this.board[row][col]);\n      }\n\n      column.reverse();\n\n      const compacted = column.filter((cell) => cell !== 0);\n\n      for (let i = 0; i < compacted.length - 1; i++) {\n        if (compacted[i] === compacted[i + 1]) {\n          compacted[i] *= 2;\n          this.score += compacted[i];\n          compacted[i + 1] = 0;\n        }\n      }\n\n      const newColumn = compacted.filter((cell) => cell !== 0);\n\n      while (newColumn.length < 4) {\n        newColumn.push(0);\n      }\n\n      newColumn.reverse();\n\n      for (let row = 0; row < this.board.length; row++) {\n        this.board[row][col] = newColumn[row];\n      }\n\n      if (newColumn.includes(2048)) {\n        this.status = 'win';\n        this.displayWinMessage();\n\n        return;\n      }\n    }\n\n    if (!this.boardsAreEqual(copyBoard, this.board)) {\n      this.addRandomTile();\n    }\n\n    this.updateScore();\n    this.renderBoard();\n  }\n\n  boardsAreEqual(board1, board2) {\n    if (board1.length !== board2.length) {\n      return false;\n    }\n\n    for (let row = 0; row < board1.length; row++) {\n      for (let col = 0; col < board1[row].length; col++) {\n        if (board1[row][col] !== board2[row][col]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  updateScore() {\n    const scoreElement = document.querySelector('.game-score');\n\n    scoreElement.textContent = this.score;\n  }\n\n  getState() {\n    return {\n      board: this.board,\n      score: this.score,\n      status: this.status,\n    };\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = 'playing';\n    this.addRandomTile();\n    this.addRandomTile();\n    this.updateScore();\n    this.renderBoard();\n  }\n\n  resetBoard() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n  }\n\n  addRandomTile() {\n    const emptyCell = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          emptyCell.push({ row, col });\n        }\n      }\n    }\n\n    if (emptyCell.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptyCell.length);\n      const { row, col } = emptyCell[randomIndex];\n      const newTile = Math.random() < 0.9 ? 2 : 4;\n\n      this.board[row][col] = newTile;\n      this.score += newTile;\n    }\n  }\n\n  restart() {\n    this.status = 'idle';\n    this.resetBoard();\n    this.score = 0;\n    this.updateScore();\n    this.renderBoard();\n  }\n\n  lose() {\n    this.status = 'lose';\n    document.querySelector('.message-restart').classList.add('hidden');\n    document.querySelector('.message-start').classList.add('hidden');\n    document.querySelector('.message-lose').classList.remove('hidden');\n  }\n\n  displayWinMessage() {\n    const winMessage = document.querySelector('.message-win');\n\n    document.querySelector('.message-restart').classList.add('hidden');\n    document.querySelector('.message-start').classList.add('hidden');\n    winMessage.classList.remove('hidden');\n  }\n}\n\nmodule.exports = Game;\nwindow.Game = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _type_of(obj) {\n    \"@swc/helpers - typeof\";\n\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\nexport { _type_of as _ };\n"],"names":["$3d28d7f1aac198f5$exports","$0b5c99e6a0876eaa$export$71511d61b312f219","obj","Symbol","constructor","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","instance","Constructor","TypeError","board","score","status","key","value","cells","document","querySelectorAll","flattenedBoard","flat","forEach","cell","index","textContent","classList","add","concat","row","length","col","lose","_this","canMove","copyBoard","map","slice","_ret","_loop","compacted","filter","i","newRow","push","includes","displayWinMessage","v","boardsAreEqual","addRandomTile","updateScore","renderBoard","reverse","column","newColumn","row1","board1","board2","scoreElement","querySelector","emptyCell","randomIndex","Math","floor","random","_emptyCell_randomIndex","col1","newTile","resetBoard","remove","winMessage","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","prototype","window","$197cd56b15c33885$var$game","addEventListener","even","moveLeft","moveRight","moveUp","moveDown","$197cd56b15c33885$var$buttonStart","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageRestart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","contains","start","restart"],"version":3,"file":"index.286e4b33.js.map"}